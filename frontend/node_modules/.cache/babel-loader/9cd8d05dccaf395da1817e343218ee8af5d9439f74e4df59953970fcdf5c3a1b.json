{"ast":null,"code":"import axios from 'axios';\nimport { BASE_URL, LOGIN_URL, ALL_MACHINES_URL, DEFINITE_MACHINE_URL, CLIENTS_MACHINES_URL, SERVICE_COMPANIES_MACHINES_URL, ALL_MAINTENANCE_URL, CLIENTS_MAINTENANCE_URL, SERVICE_COMPANIES_MAINTENANCE_URL, ALL_COMPLAINTS_URL, CLIENTS_COMPLAINTS_URL, SERVICE_COMPANIES_COMPLAINTS_URL, MAINTENANCE_TYPES_URL, ALL_SERVICE_COMPANIES_URL, BREAKAGES_URL, REPAIR_WAY_URL, VEHICLES_URL, ENGINES_URL, TRANSMISSIONS_URL, DRIVING_AXLES_URL, STEERING_AXLES_URL, ALL_CLIENTS_URL } from '../utils/constants';\nconst login = async (user, password, setter, redirection) => {\n  return await axios({\n    baseURL: BASE_URL,\n    url: LOGIN_URL,\n    method: 'post',\n    auth: {\n      username: user,\n      password: password\n    },\n    data: {\n      user: user\n    }\n  }).then(response => {\n    console.log('Logged in successfully');\n    localStorage.setItem('user', response.data.username);\n    localStorage.setItem('password', password);\n    localStorage.setItem('group', response.data.groups[0]);\n    localStorage.setItem('id', response.data.id);\n    setter(true);\n    redirection('/');\n  }).catch(error => {\n    console.log('Ошибка авторизации...', error);\n    redirection('/auth-error');\n  });\n};\nconst getServiceCompanyId = async userId => {\n  return await axios({\n    baseURL: BASE_URL,\n    url: `service-companies/${userId}/service-company-id`,\n    method: 'get'\n  }).then(response => {\n    localStorage.setItem('serviceCompanyId', response.data);\n  }).catch(error => console.log('Ошибка получения данных о погрузчиках', error));\n};\nconst getFilteredCars = async (id, setter) => {\n  return await axios({\n    baseURL: BASE_URL,\n    url: `cars/${id}/${DEFINITE_MACHINE_URL}`,\n    method: 'get'\n  }).then(response => {\n    setter(response.data);\n  }).catch(error => console.log('Ошибка получения данных о погрузчиках', error));\n};\nconst getAllClients = async setter => {\n  return await axios({\n    baseURL: BASE_URL,\n    url: ALL_CLIENTS_URL,\n    method: 'get'\n  }).then(response => {\n    setter(response.data);\n  }).catch(error => {\n    console.log('Ошибка получения данных...', error);\n  });\n};\nconst getAllMachines = async (setter1, setter2) => {\n  return await axios({\n    baseURL: BASE_URL,\n    url: ALL_MACHINES_URL,\n    method: 'get'\n  }).then(response => {\n    setter1(response.data);\n    if (setter2) {\n      setter2(response.data);\n    }\n  });\n};\nconst getClientsMachines = async (user, password, id, setter1, setter2) => {\n  return await axios({\n    baseURL: BASE_URL,\n    url: CLIENTS_MACHINES_URL,\n    method: 'get',\n    params: {\n      id: id\n    },\n    auth: {\n      username: user,\n      password: password\n    }\n  }).then(response => {\n    setter1(response.data);\n    if (setter2) {\n      setter2(response.data);\n    }\n  }).catch(error => console.log('Ошибка получения данных о погрузчиках', error));\n};\nconst getServiceCompaniesMachines = async (user, password, setter1, setter2) => {\n  return await axios({\n    baseURL: BASE_URL,\n    url: SERVICE_COMPANIES_MACHINES_URL,\n    method: 'get',\n    params: {\n      name: user\n    },\n    auth: {\n      username: user,\n      password: password\n    }\n  }).then(response => {\n    setter1(response.data);\n    if (setter2) {\n      setter2(response.data);\n    }\n  }).catch(error => console.log('Ошибка получения данных о погрузчиках', error));\n};\nconst getAllMaintenance = async (setter1, setter2) => {\n  return await axios({\n    baseURL: BASE_URL,\n    url: ALL_MAINTENANCE_URL,\n    method: 'get'\n  }).then(response => {\n    setter1(response.data);\n    if (setter2) {\n      setter2(response.data);\n    }\n  }).catch(error => console.log('Ошибка получения данных о ТО', error));\n};\nconst getClientsMaintenance = async (user, password, id, setter1, setter2) => {\n  return await axios({\n    baseURL: BASE_URL,\n    url: CLIENTS_MAINTENANCE_URL,\n    method: 'get',\n    params: {\n      id: id\n    },\n    auth: {\n      username: user,\n      password: password\n    }\n  }).then(response => {\n    setter1(response.data);\n    if (setter2) {\n      setter2(response.data);\n    }\n  }).catch(error => console.log('Ошибка получения данных о ТО', error));\n};\nconst getServiceCompaniesMaintenance = async (user, password, setter1, setter2) => {\n  return await axios({\n    baseURL: BASE_URL,\n    url: SERVICE_COMPANIES_MAINTENANCE_URL,\n    method: 'get',\n    params: {\n      name: user\n    },\n    auth: {\n      username: user,\n      password: password\n    }\n  }).then(response => {\n    setter1(response.data);\n    if (setter2) {\n      setter2(response.data);\n    }\n  }).catch(error => console.log('Ошибка получения данных о ТО', error));\n};\nconst getAllClaims = async (setter1, setter2) => {\n  return await axios({\n    baseURL: BASE_URL,\n    url: ALL_CLAIMS_URL,\n    method: 'get'\n  }).then(response => {\n    setter1(response.data);\n    if (setter2) {\n      setter2(response.data);\n    }\n  }).catch(error => console.log('Ошибка получения данных о рекламациях', error));\n};\nconst getClientsClaims = async (user, password, id, setter1, setter2) => {\n  return await axios({\n    baseURL: BASE_URL,\n    url: CLIENTS_COMPLAINTS_URL,\n    method: 'get',\n    params: {\n      id: id\n    },\n    auth: {\n      username: user,\n      password: password\n    }\n  }).then(response => {\n    setter1(response.data);\n    if (setter2) {\n      setter2(response.data);\n    }\n  }).catch(error => console.log('Ошибка получения данных о рекламациях', error));\n};\nconst getServiceCompaniesClaims = async (user, password, setter1, setter2) => {\n  return await axios({\n    baseURL: BASE_URL,\n    url: SERVICE_COMPANIES_COMPLAINTS_URL,\n    method: 'get',\n    params: {\n      name: user\n    },\n    auth: {\n      username: user,\n      password: password\n    }\n  }).then(response => {\n    setter1(response.data);\n    if (setter2) {\n      setter2(response.data);\n    }\n  }).catch(error => console.log('Ошибка получения данных о погрузчиках', error));\n};\nconst getMaintenanceTypes = async setter => {\n  return await axios({\n    baseURL: BASE_URL,\n    url: MAINTENANCE_TYPES_URL,\n    method: 'get'\n  }).then(response => {\n    setter(response.data);\n  }).catch(error => {\n    console.log('Ошибка получения данных...', error);\n  });\n};\nconst getAllServiceCompanies = async setter => {\n  return await axios({\n    baseURL: BASE_URL,\n    url: ALL_SERVICE_COMPANIES_URL,\n    method: 'get'\n  }).then(response => {\n    setter(response.data);\n  }).catch(error => {\n    console.log('Ошибка получения данных...', error);\n  });\n};\nconst getBreakagesList = async setter => {\n  return await axios({\n    baseURL: BASE_URL,\n    url: BREAKAGES_URL,\n    method: 'get'\n  }).then(response => {\n    setter(response.data);\n  }).catch(error => {\n    console.log('Ошибка получения данных...', error);\n  });\n};\nconst getRepairWaysList = async setter => {\n  return await axios({\n    baseURL: BASE_URL,\n    url: REPAIR_WAY_URL,\n    method: 'get'\n  }).then(response => {\n    setter(response.data);\n  }).catch(error => {\n    console.log('Ошибка получения данных...', error);\n  });\n};\nconst getVehicleList = async setter => {\n  return await axios({\n    baseURL: BASE_URL,\n    url: VEHICLES_URL,\n    method: 'get'\n  }).then(response => {\n    setter(response.data);\n  }).catch(error => {\n    console.log('Ошибка получения данных...', error);\n  });\n};\nconst getEngineList = async setter => {\n  return await axios({\n    baseURL: BASE_URL,\n    url: ENGINES_URL,\n    method: 'get'\n  }).then(response => {\n    setter(response.data);\n  }).catch(error => {\n    console.log('Ошибка получения данных...', error);\n  });\n};\nconst getTransmissionList = async setter => {\n  return await axios({\n    baseURL: BASE_URL,\n    url: TRANSMISSIONS_URL,\n    method: 'get'\n  }).then(response => {\n    setter(response.data);\n  }).catch(error => {\n    console.log('Ошибка получения данных...', error);\n  });\n};\nconst getDrivingAxleList = async setter => {\n  return await axios({\n    baseURL: BASE_URL,\n    url: DRIVING_AXLES_URL,\n    method: 'get'\n  }).then(response => {\n    setter(response.data);\n  }).catch(error => {\n    console.log('Ошибка получения данных...', error);\n  });\n};\nconst getSteeringAxleList = async setter => {\n  return await axios({\n    baseURL: BASE_URL,\n    url: STEERING_AXLES_URL,\n    method: 'get'\n  }).then(response => {\n    setter(response.data);\n  }).catch(error => {\n    console.log('Ошибка получения данных...', error);\n  });\n};\nconst getDetails = async (url, setter) => {\n  return await axios({\n    baseURL: BASE_URL,\n    url: url,\n    method: 'get'\n  }).then(response => {\n    setter(response.data);\n  }).catch(error => console.log('Ошибка получения подробных данных...', error));\n};\nconst getAllCatalogs = async (url, setter, titleSetter) => {\n  return await axios({\n    baseURL: BASE_URL,\n    url: url,\n    method: 'get'\n  }).then(response => {\n    setter(response.data);\n    titleSetter(response.data[0].verbose_name);\n  }).catch(error => {\n    console.log('Ошибка получения данных...', error);\n  });\n};\nconst getUniversalData = async (urlPart1, urlPart2, setter, titleSetter) => {\n  return await axios({\n    baseURL: BASE_URL,\n    url: `${urlPart1}/${urlPart2}/`,\n    method: 'get'\n  }).then(response => {\n    setter(response.data);\n    titleSetter(response.data.name);\n  }).catch(error => {\n    console.log('Ошибка получения данных...', error);\n  });\n};\nconst postNewMaintenance = async (user, password, group, serviceCompanyId, data, redirection) => {\n  if (group === '1') {\n    data.service_company = 4;\n  } else if (group === '2') {\n    data.service_company = serviceCompanyId;\n  }\n  return await axios({\n    baseURL: BASE_URL,\n    url: ALL_MAINTENANCE_URL,\n    method: 'post',\n    data: data,\n    auth: {\n      username: user,\n      password: password\n    }\n  }).then(response => {\n    redirection('/success');\n    return response.data;\n  }).catch(error => {\n    console.log('Ошибка отправки данных...', error);\n    redirection('/fail');\n  });\n};\nconst postNewClaim = async (user, password, group, serviceCompanyId, data, redirection) => {\n  if (group === '2') {\n    data.service_company = serviceCompanyId;\n  }\n  return await axios({\n    baseURL: BASE_URL,\n    url: ALL_COMPLAINTS_URL,\n    method: 'post',\n    data: data,\n    auth: {\n      username: user,\n      password: password\n    }\n  }).then(response => {\n    redirection('/success');\n    return response.data;\n  }).catch(error => {\n    console.log('Ошибка отправки данных...', error);\n    redirection('/fail');\n  });\n};\nconst postNewMachine = async (user, password, data, redirection) => {\n  return await axios({\n    baseURL: BASE_URL,\n    url: ALL_MACHINES_URL,\n    method: 'post',\n    data: data,\n    auth: {\n      username: user,\n      password: password\n    }\n  }).then(response => {\n    redirection('/success');\n    return response.data;\n  }).catch(error => {\n    console.log('Ошибка отправки данных...', error);\n    redirection('/fail');\n  });\n};\nconst postNewCatalog = async (user, password, url, data, redirection) => {\n  return await axios({\n    baseURL: BASE_URL,\n    url: `${url}/`,\n    method: 'post',\n    data: data,\n    auth: {\n      username: user,\n      password: password\n    }\n  }).then(response => {\n    redirection('/success');\n    return response.data;\n  }).catch(error => {\n    console.log('Ошибка отправки данных...', error);\n    redirection('/fail');\n  });\n};\nconst changeCatalog = async (user, password, urlPart1, urlPart2, data, redirection) => {\n  return await axios({\n    baseURL: BASE_URL,\n    url: `${urlPart1}/${urlPart2}/`,\n    method: 'patch',\n    data: data,\n    auth: {\n      username: user,\n      password: password\n    }\n  }).then(response => {\n    redirection('/success');\n    return response.data;\n  }).catch(error => {\n    console.log('Ошибка отправки данных...', error);\n    redirection('/fail');\n  });\n};\nexport { getFilteredCars, getAllMachines, getAllServiceCompanies, getAllMaintenance, getAllClaims, getDetails, getClientsMachines, getServiceCompaniesMachines, getClientsMaintenance, getServiceCompaniesMaintenance, getClientsClaims, getServiceCompaniesClaims, getMaintenanceTypes, getServiceCompanyId, getBreakagesList, getRepairWaysList, getVehicleList, getEngineList, getTransmissionList, getDrivingAxleList, getSteeringAxleList, getAllClients, getAllCatalogs, getUniversalData, postNewMaintenance, postNewClaim, postNewMachine, postNewCatalog, changeCatalog, login };","map":{"version":3,"names":["axios","BASE_URL","LOGIN_URL","ALL_MACHINES_URL","DEFINITE_MACHINE_URL","CLIENTS_MACHINES_URL","SERVICE_COMPANIES_MACHINES_URL","ALL_MAINTENANCE_URL","CLIENTS_MAINTENANCE_URL","SERVICE_COMPANIES_MAINTENANCE_URL","ALL_COMPLAINTS_URL","CLIENTS_COMPLAINTS_URL","SERVICE_COMPANIES_COMPLAINTS_URL","MAINTENANCE_TYPES_URL","ALL_SERVICE_COMPANIES_URL","BREAKAGES_URL","REPAIR_WAY_URL","VEHICLES_URL","ENGINES_URL","TRANSMISSIONS_URL","DRIVING_AXLES_URL","STEERING_AXLES_URL","ALL_CLIENTS_URL","login","user","password","setter","redirection","baseURL","url","method","auth","username","data","then","response","console","log","localStorage","setItem","groups","id","catch","error","getServiceCompanyId","userId","getFilteredCars","getAllClients","getAllMachines","setter1","setter2","getClientsMachines","params","getServiceCompaniesMachines","name","getAllMaintenance","getClientsMaintenance","getServiceCompaniesMaintenance","getAllClaims","ALL_CLAIMS_URL","getClientsClaims","getServiceCompaniesClaims","getMaintenanceTypes","getAllServiceCompanies","getBreakagesList","getRepairWaysList","getVehicleList","getEngineList","getTransmissionList","getDrivingAxleList","getSteeringAxleList","getDetails","getAllCatalogs","titleSetter","verbose_name","getUniversalData","urlPart1","urlPart2","postNewMaintenance","group","serviceCompanyId","service_company","postNewClaim","postNewMachine","postNewCatalog","changeCatalog"],"sources":["C:/Users/Deamotis/SF/Silant/frontend/src/api/dataService.js"],"sourcesContent":["import axios from 'axios'\r\n\r\nimport {\r\n\tBASE_URL,\r\n\tLOGIN_URL,\r\n\tALL_MACHINES_URL,\r\n\tDEFINITE_MACHINE_URL,\r\n\tCLIENTS_MACHINES_URL,\r\n\tSERVICE_COMPANIES_MACHINES_URL,\r\n\tALL_MAINTENANCE_URL,\r\n\tCLIENTS_MAINTENANCE_URL,\r\n\tSERVICE_COMPANIES_MAINTENANCE_URL,\r\n\tALL_COMPLAINTS_URL,\r\n\tCLIENTS_COMPLAINTS_URL,\r\n\tSERVICE_COMPANIES_COMPLAINTS_URL,\r\n\tMAINTENANCE_TYPES_URL,\r\n\tALL_SERVICE_COMPANIES_URL,\r\n\tBREAKAGES_URL,\r\n\tREPAIR_WAY_URL,\r\n\tVEHICLES_URL,\r\n\tENGINES_URL,\r\n\tTRANSMISSIONS_URL,\r\n\tDRIVING_AXLES_URL,\r\n\tSTEERING_AXLES_URL,\r\n\tALL_CLIENTS_URL,\r\n} from '../utils/constants'\r\n\r\nconst login = async (user, password, setter, redirection) => {\r\n\treturn await axios({\r\n\t\tbaseURL: BASE_URL,\r\n\t\turl: LOGIN_URL,\r\n\t\tmethod: 'post',\r\n\t\tauth: {\r\n\t\t\tusername: user,\r\n\t\t\tpassword: password,\r\n\t\t},\r\n\t\tdata: {\r\n\t\t\tuser: user,\r\n\t\t},\r\n\t})\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('Logged in successfully')\r\n\t\t\tlocalStorage.setItem('user', response.data.username)\r\n\t\t\tlocalStorage.setItem('password', password)\r\n\t\t\tlocalStorage.setItem('group', response.data.groups[0])\r\n\t\t\tlocalStorage.setItem('id', response.data.id)\r\n\t\t\tsetter(true)\r\n\t\t\tredirection('/')\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tconsole.log('Ошибка авторизации...', error)\r\n\t\t\tredirection('/auth-error')\r\n\t\t})\r\n}\r\n\r\nconst getServiceCompanyId = async userId => {\r\n\treturn await axios({\r\n\t\tbaseURL: BASE_URL,\r\n\t\turl: `service-companies/${userId}/service-company-id`,\r\n\t\tmethod: 'get',\r\n\t})\r\n\t\t.then(response => {\r\n\t\t\tlocalStorage.setItem('serviceCompanyId', response.data)\r\n\t\t})\r\n\t\t.catch(error => console.log('Ошибка получения данных о погрузчиках', error))\r\n}\r\n\r\nconst getFilteredCars = async (id, setter) => {\r\n\treturn await axios({\r\n\t\tbaseURL: BASE_URL,\r\n\t\turl: `cars/${id}/${DEFINITE_MACHINE_URL}`,\r\n\t\tmethod: 'get',\r\n\t})\r\n\t\t.then(response => {\r\n\t\t\tsetter(response.data)\r\n\t\t})\r\n\t\t.catch(error => console.log('Ошибка получения данных о погрузчиках', error))\r\n}\r\n\r\nconst getAllClients = async setter => {\r\n\treturn await axios({\r\n\t\tbaseURL: BASE_URL,\r\n\t\turl: ALL_CLIENTS_URL,\r\n\t\tmethod: 'get',\r\n\t})\r\n\t\t.then(response => {\r\n\t\t\tsetter(response.data)\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tconsole.log('Ошибка получения данных...', error)\r\n\t\t})\r\n}\r\n\r\nconst getAllMachines = async (setter1, setter2) => {\r\n\treturn await axios({\r\n\t\tbaseURL: BASE_URL,\r\n\t\turl: ALL_MACHINES_URL,\r\n\t\tmethod: 'get',\r\n\t}).then(response => {\r\n\t\tsetter1(response.data)\r\n\t\tif (setter2) {\r\n\t\t\tsetter2(response.data)\r\n\t\t}\r\n\t})\r\n}\r\n\r\nconst getClientsMachines = async (user, password, id, setter1, setter2) => {\r\n\treturn await axios({\r\n\t\tbaseURL: BASE_URL,\r\n\t\turl: CLIENTS_MACHINES_URL,\r\n\t\tmethod: 'get',\r\n\t\tparams: {\r\n\t\t\tid: id,\r\n\t\t},\r\n\t\tauth: {\r\n\t\t\tusername: user,\r\n\t\t\tpassword: password,\r\n\t\t},\r\n\t})\r\n\t\t.then(response => {\r\n\t\t\tsetter1(response.data)\r\n\t\t\tif (setter2) {\r\n\t\t\t\tsetter2(response.data)\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch(error => console.log('Ошибка получения данных о погрузчиках', error))\r\n}\r\n\r\nconst getServiceCompaniesMachines = async (user, password, setter1, setter2) => {\r\n\treturn await axios({\r\n\t\tbaseURL: BASE_URL,\r\n\t\turl: SERVICE_COMPANIES_MACHINES_URL,\r\n\t\tmethod: 'get',\r\n\t\tparams: {\r\n\t\t\tname: user,\r\n\t\t},\r\n\t\tauth: {\r\n\t\t\tusername: user,\r\n\t\t\tpassword: password,\r\n\t\t},\r\n\t})\r\n\t\t.then(response => {\r\n\t\t\tsetter1(response.data)\r\n\t\t\tif (setter2) {\r\n\t\t\t\tsetter2(response.data)\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch(error => console.log('Ошибка получения данных о погрузчиках', error))\r\n}\r\n\r\nconst getAllMaintenance = async (setter1, setter2) => {\r\n\treturn await axios({\r\n\t\tbaseURL: BASE_URL,\r\n\t\turl: ALL_MAINTENANCE_URL,\r\n\t\tmethod: 'get',\r\n\t})\r\n\t\t.then(response => {\r\n\t\t\tsetter1(response.data)\r\n\t\t\tif (setter2) {\r\n\t\t\t\tsetter2(response.data)\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch(error => console.log('Ошибка получения данных о ТО', error))\r\n}\r\n\r\nconst getClientsMaintenance = async (user, password, id, setter1, setter2) => {\r\n\treturn await axios({\r\n\t\tbaseURL: BASE_URL,\r\n\t\turl: CLIENTS_MAINTENANCE_URL,\r\n\t\tmethod: 'get',\r\n\t\tparams: {\r\n\t\t\tid: id,\r\n\t\t},\r\n\t\tauth: {\r\n\t\t\tusername: user,\r\n\t\t\tpassword: password,\r\n\t\t},\r\n\t})\r\n\t\t.then(response => {\r\n\t\t\tsetter1(response.data)\r\n\t\t\tif (setter2) {\r\n\t\t\t\tsetter2(response.data)\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch(error => console.log('Ошибка получения данных о ТО', error))\r\n}\r\n\r\nconst getServiceCompaniesMaintenance = async (\r\n\tuser,\r\n\tpassword,\r\n\tsetter1,\r\n\tsetter2\r\n) => {\r\n\treturn await axios({\r\n\t\tbaseURL: BASE_URL,\r\n\t\turl: SERVICE_COMPANIES_MAINTENANCE_URL,\r\n\t\tmethod: 'get',\r\n\t\tparams: {\r\n\t\t\tname: user,\r\n\t\t},\r\n\t\tauth: {\r\n\t\t\tusername: user,\r\n\t\t\tpassword: password,\r\n\t\t},\r\n\t})\r\n\t\t.then(response => {\r\n\t\t\tsetter1(response.data)\r\n\t\t\tif (setter2) {\r\n\t\t\t\tsetter2(response.data)\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch(error => console.log('Ошибка получения данных о ТО', error))\r\n}\r\n\r\nconst getAllClaims = async (setter1, setter2) => {\r\n\treturn await axios({\r\n\t\tbaseURL: BASE_URL,\r\n\t\turl: ALL_CLAIMS_URL,\r\n\t\tmethod: 'get',\r\n\t})\r\n\t\t.then(response => {\r\n\t\t\tsetter1(response.data)\r\n\t\t\tif (setter2) {\r\n\t\t\t\tsetter2(response.data)\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch(error => console.log('Ошибка получения данных о рекламациях', error))\r\n}\r\n\r\nconst getClientsClaims = async (user, password, id, setter1, setter2) => {\r\n\treturn await axios({\r\n\t\tbaseURL: BASE_URL,\r\n\t\turl: CLIENTS_COMPLAINTS_URL,\r\n\t\tmethod: 'get',\r\n\t\tparams: {\r\n\t\t\tid: id,\r\n\t\t},\r\n\t\tauth: {\r\n\t\t\tusername: user,\r\n\t\t\tpassword: password,\r\n\t\t},\r\n\t})\r\n\t\t.then(response => {\r\n\t\t\tsetter1(response.data)\r\n\t\t\tif (setter2) {\r\n\t\t\t\tsetter2(response.data)\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch(error => console.log('Ошибка получения данных о рекламациях', error))\r\n}\r\n\r\nconst getServiceCompaniesClaims = async (\r\n\tuser,\r\n\tpassword,\r\n\tsetter1,\r\n\tsetter2\r\n) => {\r\n\treturn await axios({\r\n\t\tbaseURL: BASE_URL,\r\n\t\turl: SERVICE_COMPANIES_COMPLAINTS_URL,\r\n\t\tmethod: 'get',\r\n\t\tparams: {\r\n\t\t\tname: user,\r\n\t\t},\r\n\t\tauth: {\r\n\t\t\tusername: user,\r\n\t\t\tpassword: password,\r\n\t\t},\r\n\t})\r\n\t\t.then(response => {\r\n\t\t\tsetter1(response.data)\r\n\t\t\tif (setter2) {\r\n\t\t\t\tsetter2(response.data)\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch(error => console.log('Ошибка получения данных о погрузчиках', error))\r\n}\r\n\r\nconst getMaintenanceTypes = async setter => {\r\n\treturn await axios({\r\n\t\tbaseURL: BASE_URL,\r\n\t\turl: MAINTENANCE_TYPES_URL,\r\n\t\tmethod: 'get',\r\n\t})\r\n\t\t.then(response => {\r\n\t\t\tsetter(response.data)\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tconsole.log('Ошибка получения данных...', error)\r\n\t\t})\r\n}\r\n\r\nconst getAllServiceCompanies = async setter => {\r\n\treturn await axios({\r\n\t\tbaseURL: BASE_URL,\r\n\t\turl: ALL_SERVICE_COMPANIES_URL,\r\n\t\tmethod: 'get',\r\n\t})\r\n\t\t.then(response => {\r\n\t\t\tsetter(response.data)\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tconsole.log('Ошибка получения данных...', error)\r\n\t\t})\r\n}\r\n\r\nconst getBreakagesList = async setter => {\r\n\treturn await axios({\r\n\t\tbaseURL: BASE_URL,\r\n\t\turl: BREAKAGES_URL,\r\n\t\tmethod: 'get',\r\n\t})\r\n\t\t.then(response => {\r\n\t\t\tsetter(response.data)\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tconsole.log('Ошибка получения данных...', error)\r\n\t\t})\r\n}\r\n\r\nconst getRepairWaysList = async setter => {\r\n\treturn await axios({\r\n\t\tbaseURL: BASE_URL,\r\n\t\turl: REPAIR_WAY_URL,\r\n\t\tmethod: 'get',\r\n\t})\r\n\t\t.then(response => {\r\n\t\t\tsetter(response.data)\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tconsole.log('Ошибка получения данных...', error)\r\n\t\t})\r\n}\r\n\r\nconst getVehicleList = async setter => {\r\n\treturn await axios({\r\n\t\tbaseURL: BASE_URL,\r\n\t\turl: VEHICLES_URL,\r\n\t\tmethod: 'get',\r\n\t})\r\n\t\t.then(response => {\r\n\t\t\tsetter(response.data)\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tconsole.log('Ошибка получения данных...', error)\r\n\t\t})\r\n}\r\n\r\nconst getEngineList = async setter => {\r\n\treturn await axios({\r\n\t\tbaseURL: BASE_URL,\r\n\t\turl: ENGINES_URL,\r\n\t\tmethod: 'get',\r\n\t})\r\n\t\t.then(response => {\r\n\t\t\tsetter(response.data)\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tconsole.log('Ошибка получения данных...', error)\r\n\t\t})\r\n}\r\n\r\nconst getTransmissionList = async setter => {\r\n\treturn await axios({\r\n\t\tbaseURL: BASE_URL,\r\n\t\turl: TRANSMISSIONS_URL,\r\n\t\tmethod: 'get',\r\n\t})\r\n\t\t.then(response => {\r\n\t\t\tsetter(response.data)\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tconsole.log('Ошибка получения данных...', error)\r\n\t\t})\r\n}\r\n\r\nconst getDrivingAxleList = async setter => {\r\n\treturn await axios({\r\n\t\tbaseURL: BASE_URL,\r\n\t\turl: DRIVING_AXLES_URL,\r\n\t\tmethod: 'get',\r\n\t})\r\n\t\t.then(response => {\r\n\t\t\tsetter(response.data)\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tconsole.log('Ошибка получения данных...', error)\r\n\t\t})\r\n}\r\n\r\nconst getSteeringAxleList = async setter => {\r\n\treturn await axios({\r\n\t\tbaseURL: BASE_URL,\r\n\t\turl: STEERING_AXLES_URL,\r\n\t\tmethod: 'get',\r\n\t})\r\n\t\t.then(response => {\r\n\t\t\tsetter(response.data)\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tconsole.log('Ошибка получения данных...', error)\r\n\t\t})\r\n}\r\n\r\nconst getDetails = async (url, setter) => {\r\n\treturn await axios({\r\n\t\tbaseURL: BASE_URL,\r\n\t\turl: url,\r\n\t\tmethod: 'get',\r\n\t})\r\n\t\t.then(response => {\r\n\t\t\tsetter(response.data)\r\n\t\t})\r\n\t\t.catch(error => console.log('Ошибка получения подробных данных...', error))\r\n}\r\n\r\nconst getAllCatalogs = async (url, setter, titleSetter) => {\r\n\treturn await axios({\r\n\t\tbaseURL: BASE_URL,\r\n\t\turl: url,\r\n\t\tmethod: 'get',\r\n\t})\r\n\t\t.then(response => {\r\n\t\t\tsetter(response.data)\r\n\t\t\ttitleSetter(response.data[0].verbose_name)\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tconsole.log('Ошибка получения данных...', error)\r\n\t\t})\r\n}\r\n\r\nconst getUniversalData = async (urlPart1, urlPart2, setter, titleSetter) => {\r\n\treturn await axios({\r\n\t\tbaseURL: BASE_URL,\r\n\t\turl: `${urlPart1}/${urlPart2}/`,\r\n\t\tmethod: 'get',\r\n\t})\r\n\t\t.then(response => {\r\n\t\t\tsetter(response.data)\r\n\t\t\ttitleSetter(response.data.name)\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tconsole.log('Ошибка получения данных...', error)\r\n\t\t})\r\n}\r\n\r\nconst postNewMaintenance = async (\r\n\tuser,\r\n\tpassword,\r\n\tgroup,\r\n\tserviceCompanyId,\r\n\tdata,\r\n\tredirection\r\n) => {\r\n\tif (group === '1') {\r\n\t\tdata.service_company = 4\r\n\t} else if (group === '2') {\r\n\t\tdata.service_company = serviceCompanyId\r\n\t}\r\n\r\n\treturn await axios({\r\n\t\tbaseURL: BASE_URL,\r\n\t\turl: ALL_MAINTENANCE_URL,\r\n\t\tmethod: 'post',\r\n\t\tdata: data,\r\n\t\tauth: {\r\n\t\t\tusername: user,\r\n\t\t\tpassword: password,\r\n\t\t},\r\n\t})\r\n\t\t.then(response => {\r\n\t\t\tredirection('/success')\r\n\t\t\treturn response.data\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tconsole.log('Ошибка отправки данных...', error)\r\n\t\t\tredirection('/fail')\r\n\t\t})\r\n}\r\n\r\nconst postNewClaim = async (\r\n\tuser,\r\n\tpassword,\r\n\tgroup,\r\n\tserviceCompanyId,\r\n\tdata,\r\n\tredirection\r\n) => {\r\n\tif (group === '2') {\r\n\t\tdata.service_company = serviceCompanyId\r\n\t}\r\n\r\n\treturn await axios({\r\n\t\tbaseURL: BASE_URL,\r\n\t\turl: ALL_COMPLAINTS_URL,\r\n\t\tmethod: 'post',\r\n\t\tdata: data,\r\n\t\tauth: {\r\n\t\t\tusername: user,\r\n\t\t\tpassword: password,\r\n\t\t},\r\n\t})\r\n\t\t.then(response => {\r\n\t\t\tredirection('/success')\r\n\t\t\treturn response.data\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tconsole.log('Ошибка отправки данных...', error)\r\n\t\t\tredirection('/fail')\r\n\t\t})\r\n}\r\n\r\nconst postNewMachine = async (user, password, data, redirection) => {\r\n\treturn await axios({\r\n\t\tbaseURL: BASE_URL,\r\n\t\turl: ALL_MACHINES_URL,\r\n\t\tmethod: 'post',\r\n\t\tdata: data,\r\n\t\tauth: {\r\n\t\t\tusername: user,\r\n\t\t\tpassword: password,\r\n\t\t},\r\n\t})\r\n\t\t.then(response => {\r\n\t\t\tredirection('/success')\r\n\t\t\treturn response.data\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tconsole.log('Ошибка отправки данных...', error)\r\n\t\t\tredirection('/fail')\r\n\t\t})\r\n}\r\n\r\nconst postNewCatalog = async (user, password, url, data, redirection) => {\r\n\treturn await axios({\r\n\t\tbaseURL: BASE_URL,\r\n\t\turl: `${url}/`,\r\n\t\tmethod: 'post',\r\n\t\tdata: data,\r\n\t\tauth: {\r\n\t\t\tusername: user,\r\n\t\t\tpassword: password,\r\n\t\t},\r\n\t})\r\n\t\t.then(response => {\r\n\t\t\tredirection('/success')\r\n\t\t\treturn response.data\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tconsole.log('Ошибка отправки данных...', error)\r\n\t\t\tredirection('/fail')\r\n\t\t})\r\n}\r\n\r\nconst changeCatalog = async (\r\n\tuser,\r\n\tpassword,\r\n\turlPart1,\r\n\turlPart2,\r\n\tdata,\r\n\tredirection\r\n) => {\r\n\treturn await axios({\r\n\t\tbaseURL: BASE_URL,\r\n\t\turl: `${urlPart1}/${urlPart2}/`,\r\n\t\tmethod: 'patch',\r\n\t\tdata: data,\r\n\t\tauth: {\r\n\t\t\tusername: user,\r\n\t\t\tpassword: password,\r\n\t\t},\r\n\t})\r\n\t\t.then(response => {\r\n\t\t\tredirection('/success')\r\n\t\t\treturn response.data\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tconsole.log('Ошибка отправки данных...', error)\r\n\t\t\tredirection('/fail')\r\n\t\t})\r\n}\r\n\r\nexport {\r\n\tgetFilteredCars,\r\n\tgetAllMachines,\r\n\tgetAllServiceCompanies,\r\n\tgetAllMaintenance,\r\n\tgetAllClaims,\r\n\tgetDetails,\r\n\tgetClientsMachines,\r\n\tgetServiceCompaniesMachines,\r\n\tgetClientsMaintenance,\r\n\tgetServiceCompaniesMaintenance,\r\n\tgetClientsClaims,\r\n\tgetServiceCompaniesClaims,\r\n\tgetMaintenanceTypes,\r\n\tgetServiceCompanyId,\r\n\tgetBreakagesList,\r\n\tgetRepairWaysList,\r\n\tgetVehicleList,\r\n\tgetEngineList,\r\n\tgetTransmissionList,\r\n\tgetDrivingAxleList,\r\n\tgetSteeringAxleList,\r\n\tgetAllClients,\r\n\tgetAllCatalogs,\r\n\tgetUniversalData,\r\n\tpostNewMaintenance,\r\n\tpostNewClaim,\r\n\tpostNewMachine,\r\n\tpostNewCatalog,\r\n\tchangeCatalog,\r\n\tlogin,\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}